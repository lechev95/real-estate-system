const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Starting database seed...');

  // Create users (agents)
  const hashedPassword = await bcrypt.hash('password123', 10);
  
  const user1 = await prisma.user.create({
    data: {
      email: 'maria.ivanova@realestate.bg',
      passwordHash: hashedPassword,
      firstName: '–ú–∞—Ä–∏—è',
      lastName: '–ò–≤–∞–Ω–æ–≤–∞',
      role: 'agent',
      phone: '+359 888 111 222'
    }
  });

  const user2 = await prisma.user.create({
    data: {
      email: 'petar.stoynov@realestate.bg',
      passwordHash: hashedPassword,
      firstName: '–ü–µ—Ç—ä—Ä',
      lastName: '–°—Ç–æ–π–Ω–æ–≤',
      role: 'agent',
      phone: '+359 888 333 444'
    }
  });

  console.log('‚úÖ Users created');

  // Create sellers
  const seller1 = await prisma.seller.create({
    data: {
      firstName: '–°—Ç–µ—Ñ–∞–Ω',
      lastName: '–ì–µ–æ—Ä–≥–∏–µ–≤',
      phone: '+359 889 111 222',
      email: 'stefan.georgiev@email.com',
      status: 'active',
      assignedAgentId: user1.id,
      notes: '–°–æ–±—Å—Ç–≤–µ–Ω–∏–∫ –Ω–∞ 2 –∏–º–æ—Ç–∞ –≤ —Ü–µ–Ω—Ç—ä—Ä–∞.'
    }
  });

  const seller2 = await prisma.seller.create({
    data: {
      firstName: '–ï–ª–µ–Ω–∞',
      lastName: '–¢–æ–¥–æ—Ä–æ–≤–∞',
      phone: '+359 887 333 444',
      email: 'elena.todorova@email.com',
      status: 'active',
      assignedAgentId: user2.id,
      notes: '–°–æ–±—Å—Ç–≤–µ–Ω–∏–∫ –Ω–∞ —É–ø—Ä–∞–≤–ª—è–≤–∞–Ω –∏–º–æ—Ç –∏ –∫—ä—â–∞.'
    }
  });

  console.log('‚úÖ Sellers created');

  // Create properties
  const property1 = await prisma.property.create({
    data: {
      propertyType: 'sale',
      category: 'apartment',
      title: '–¢—Ä–∏—Å—Ç–∞–µ–Ω –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –≤ –õ–æ–∑–µ–Ω–µ—Ü',
      description: '–°–≤–µ—Ç—ä–ª —Ç—Ä–∏—Å—Ç–∞–µ–Ω –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —Å –¥–≤–µ —Ç–µ—Ä–∞—Å–∏ –∏ –ø–∞—Ä–∫–æ–º—è—Å—Ç–æ.',
      address: '—É–ª. –§—Ä–∏—Ç—å–æ—Ñ –ù–∞–Ω—Å–µ–Ω 25',
      city: '–°–æ—Ñ–∏—è',
      district: '–õ–æ–∑–µ–Ω–µ—Ü',
      area: 95,
      rooms: 3,
      floor: 4,
      totalFloors: 6,
      yearBuilt: 2010,
      exposure: '–Æ–≥/–ò–∑—Ç–æ–∫',
      heating: '–¶–µ–Ω—Ç—Ä–∞–ª–Ω–æ –ø–∞—Ä–Ω–æ',
      priceEur: 165000,
      pricePerSqm: 1737,
      status: 'available',
      viewings: 8,
      lastViewing: new Date('2024-12-05'),
      sellerId: seller1.id,
      assignedAgentId: user1.id
    }
  });

  const property2 = await prisma.property.create({
    data: {
      propertyType: 'rent',
      category: 'apartment',
      title: '–î–≤—É—Å—Ç–∞–µ–Ω –ø–æ–¥ –Ω–∞–µ–º –≤ –°—Ç—É–¥–µ–Ω—Ç—Å–∫–∏ –≥—Ä–∞–¥',
      description: '–û–±–∑–∞–≤–µ–¥–µ–Ω –¥–≤—É—Å—Ç–∞–µ–Ω –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –¥–æ –ù–ë–£.',
      address: '–±—É–ª. –ö–ª–∏–º–µ–Ω—Ç –û—Ö—Ä–∏–¥—Å–∫–∏ 87',
      city: '–°–æ—Ñ–∏—è',
      district: '–°—Ç—É–¥–µ–Ω—Ç—Å–∫–∏ –≥—Ä–∞–¥',
      area: 65,
      rooms: 2,
      floor: 2,
      totalFloors: 5,
      yearBuilt: 1985,
      exposure: '–ó–∞–ø–∞–¥',
      heating: '–ö–ª–∏–º–∞—Ç–∏—Ü–∏',
      monthlyRentEur: 600,
      rentalConditions: '–î–µ–ø–æ–∑–∏—Ç 1 –º–µ—Å–µ—Ü, –±–µ–∑ –¥–æ–º–∞—à–Ω–∏ –ª—é–±–∏–º—Ü–∏',
      status: 'rented',
      viewings: 12,
      lastViewing: new Date('2024-11-30'),
      sellerId: seller1.id,
      assignedAgentId: user1.id
    }
  });

  const property3 = await prisma.property.create({
    data: {
      propertyType: 'managed',
      category: 'apartment',
      title: '–ï–¥–Ω–æ—Å—Ç–∞–µ–Ω - —É–ø—Ä–∞–≤–ª—è–≤–∞–Ω –∏–º–æ—Ç',
      description: '–ú–∞–ª—ä–∫ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –≤ —Å—ä—Ä—Ü–µ—Ç–æ –Ω–∞ –°–æ—Ñ–∏—è.',
      address: '—É–ª. –í–∞—Å–∏–ª –õ–µ–≤—Å–∫–∏ 45',
      city: '–°–æ—Ñ–∏—è',
      district: '–¶–µ–Ω—Ç—ä—Ä',
      area: 45,
      rooms: 1,
      floor: 3,
      totalFloors: 4,
      yearBuilt: 1960,
      exposure: '–°–µ–≤–µ—Ä',
      heating: '–ï–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ',
      monthlyRentEur: 450,
      managementFeePercent: 8,
      status: 'managed',
      viewings: 5,
      sellerId: seller2.id,
      assignedAgentId: user2.id
    }
  });

  const property4 = await prisma.property.create({
    data: {
      propertyType: 'sale',
      category: 'house',
      title: '–ö—ä—â–∞ –≤ –ë–æ—è–Ω–∞',
      description: '–ö—Ä–∞—Å–∏–≤–∞ –∫—ä—â–∞ —Å –¥–≤–æ—Ä 400–∫–≤.–º.',
      address: '—É–ª. –ê–∫–∞–¥. –ë–æ—Ä–∏—Å –°—Ç–µ—Ñ–∞–Ω–æ–≤ 15',
      city: '–°–æ—Ñ–∏—è',
      district: '–ë–æ—è–Ω–∞',
      area: 180,
      rooms: 4,
      floor: 1,
      totalFloors: 2,
      yearBuilt: 2005,
      exposure: '–Æ–≥',
      heating: '–ì–∞–∑–æ–≤–æ',
      priceEur: 280000,
      pricePerSqm: 1556,
      status: 'available',
      viewings: 15,
      lastViewing: new Date('2024-12-06'),
      sellerId: seller2.id,
      assignedAgentId: user2.id
    }
  });

  console.log('‚úÖ Properties created');

  // Create buyers
  const buyer1 = await prisma.buyer.create({
    data: {
      firstName: '–ì–µ–æ—Ä–≥–∏',
      lastName: '–ü–µ—Ç—Ä–æ–≤',
      phone: '+359 888 123 456',
      email: 'georgi.petrov@email.com',
      budgetMin: 80000,
      budgetMax: 120000,
      preferredLocation: '–í–∏—Ç–æ—à–∞, –°–æ—Ñ–∏—è',
      propertyType: 'apartment',
      roomsMin: 2,
      roomsMax: 3,
      status: 'active',
      source: 'website',
      assignedAgentId: user1.id,
      notes: '–¢—ä—Ä—Å–∏ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —Å —Ç–µ—Ä–∞—Å–∞. –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞ —é–∂–Ω–æ –∏–∑–ª–æ–∂–µ–Ω–∏–µ.'
    }
  });

  const buyer2 = await prisma.buyer.create({
    data: {
      firstName: '–ê–Ω–Ω–∞',
      lastName: '–î–∏–º–∏—Ç—Ä–æ–≤–∞',
      phone: '+359 887 654 321',
      email: 'anna.dimitrova@gmail.com',
      budgetMin: 150000,
      budgetMax: 200000,
      preferredLocation: '–õ–æ–∑–µ–Ω–µ—Ü, –°–æ—Ñ–∏—è',
      propertyType: 'house',
      roomsMin: 3,
      roomsMax: 4,
      status: 'active',
      source: 'referral',
      assignedAgentId: user2.id,
      notes: '–¢—ä—Ä—Å–∏ –∫—ä—â–∞ —Å –¥–≤–æ—Ä –∑–∞ –∫—É—á–µ—Ç–æ —Å–∏.'
    }
  });

  const buyer3 = await prisma.buyer.create({
    data: {
      firstName: '–ò–≤–∞–Ω',
      lastName: '–ù–∏–∫–æ–ª–æ–≤',
      phone: '+359 888 999 777',
      email: 'ivan.nikolov@company.com',
      budgetMin: 60000,
      budgetMax: 90000,
      preferredLocation: '–°—Ç—É–¥–µ–Ω—Ç—Å–∫–∏ –≥—Ä–∞–¥, –°–æ—Ñ–∏—è',
      propertyType: 'apartment',
      roomsMin: 1,
      roomsMax: 2,
      status: 'converted',
      source: 'advertisement',
      assignedAgentId: user1.id,
      notes: '–ö—É–ø–∏ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –ø—Ä–µ–∑ –Ω–æ–µ–º–≤—Ä–∏.'
    }
  });

  const buyer4 = await prisma.buyer.create({
    data: {
      firstName: '–ú–∞—Ä–∏—è',
      lastName: '–°—Ç–æ—è–Ω–æ–≤–∞',
      phone: '+359 889 444 555',
      email: 'maria.stoyanova@gmail.com',
      budgetMin: 250000,
      budgetMax: 350000,
      preferredLocation: '–ë–æ—è–Ω–∞, –°–æ—Ñ–∏—è',
      propertyType: 'house',
      roomsMin: 4,
      roomsMax: 5,
      status: 'active',
      source: 'recommendation',
      assignedAgentId: user2.id,
      notes: '–¢—ä—Ä—Å–∏ –ª—É–∫—Å–æ–∑–Ω–∞ –∫—ä—â–∞ —Å –≥–æ–ª—è–º –¥–≤–æ—Ä.'
    }
  });

  console.log('‚úÖ Buyers created');

  // Create tenants for managed properties
  const tenant1 = await prisma.tenant.create({
    data: {
      firstName: '–ö–∞–ª–∏–Ω',
      lastName: '–ü–µ—Ç–∫–æ–≤',
      phone: '+359 888 555 666',
      email: 'kalin.petkov@email.com',
      propertyId: property2.id,
      contractStart: new Date('2024-12-01'),
      contractEnd: new Date('2025-12-01'),
      deposit: 600,
      monthlyRent: 600,
      status: 'active'
    }
  });

  const tenant2 = await prisma.tenant.create({
    data: {
      firstName: '–ú–∏–ª–∞',
      lastName: '–î–∏–º–∏—Ç—Ä–æ–≤–∞',
      phone: '+359 887 777 888',
      email: 'mila.dimitrova@email.com',
      propertyId: property3.id,
      contractStart: new Date('2024-10-01'),
      contractEnd: new Date('2025-10-01'),
      deposit: 450,
      monthlyRent: 450,
      status: 'active'
    }
  });

  console.log('‚úÖ Tenants created');

  // Create tasks
  const task1 = await prisma.task.create({
    data: {
      title: '–û–±–∞–∂–¥–∞–Ω–µ –¥–æ –ì–µ–æ—Ä–≥–∏ –ü–µ—Ç—Ä–æ–≤',
      description: '–ü–æ—Å–ª–µ–¥–≤–∞—â —Ä–∞–∑–≥–æ–≤–æ—Ä –∑–∞ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ –≤ –õ–æ–∑–µ–Ω–µ—Ü',
      dueDate: new Date('2024-12-08'),
      dueTime: new Date('1970-01-01T14:00:00Z'),
      priority: 'high',
      status: 'pending',
      taskType: 'follow_up',
      buyerId: buyer1.id,
      propertyId: property1.id,
      assignedAgentId: user1.id
    }
  });

  const task2 = await prisma.task.create({
    data: {
      title: '–î–æ–≥–æ–≤–æ—Ä –∑–∞ –Ω–∞–µ–º - –ø–æ–¥–Ω–æ–≤—è–≤–∞–Ω–µ',
      description: '–ü–æ–¥–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –¥–æ–≥–æ–≤–æ—Ä–∞ —Å –ú–∏–ª–∞ –î–∏–º–∏—Ç—Ä–æ–≤–∞',
      dueDate: new Date('2024-12-15'),
      dueTime: new Date('1970-01-01T10:00:00Z'),
      priority: 'urgent',
      status: 'pending',
      taskType: 'contract_renewal',
      propertyId: property3.id,
      assignedAgentId: user2.id
    }
  });

  const task3 = await prisma.task.create({
    data: {
      title: '–°—ä–±–∏—Ä–∞–Ω–µ –Ω–∞ –Ω–∞–µ–º',
      description: '–ú–µ—Å–µ—á–µ–Ω –Ω–∞–µ–º –æ—Ç —É–ø—Ä–∞–≤–ª—è–≤–∞–Ω–∏—è –∏–º–æ—Ç',
      dueDate: new Date('2024-12-05'),
      dueTime: new Date('1970-01-01T09:00:00Z'),
      priority: 'medium',
      status: 'completed',
      taskType: 'payment_collection',
      propertyId: property3.id,
      assignedAgentId: user2.id
    }
  });

  const task4 = await prisma.task.create({
    data: {
      title: '–û–≥–ª–µ–¥ —Å –ê–Ω–Ω–∞ –î–∏–º–∏—Ç—Ä–æ–≤–∞',
      description: '–ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –∫—ä—â–∞—Ç–∞ –≤ –ë–æ—è–Ω–∞',
      dueDate: new Date('2024-12-10'),
      dueTime: new Date('1970-01-01T15:30:00Z'),
      priority: 'high',
      status: 'pending',
      taskType: 'viewing',
      buyerId: buyer2.id,
      propertyId: property4.id,
      assignedAgentId: user2.id
    }
  });

  const task5 = await prisma.task.create({
    data: {
      title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∏',
      description: '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –∑–∞ –ø—Ä–æ–¥–∞–∂–±–∞',
      dueDate: new Date('2024-12-12'),
      dueTime: new Date('1970-01-01T09:00:00Z'),
      priority: 'medium',
      status: 'pending',
      taskType: 'documentation',
      propertyId: property1.id,
      assignedAgentId: user1.id
    }
  });

  console.log('‚úÖ Tasks created');

  console.log('üéâ Database seed completed successfully!');
  console.log('\nüìä Created:');
  console.log(`üë• Users: 2`);
  console.log(`üè™ Sellers: 2`);
  console.log(`üè† Properties: 4`);
  console.log(`üë§ Buyers: 4`);
  console.log(`üè° Tenants: 2`);
  console.log(`üìÖ Tasks: 5`);
  console.log('\nüîê Login credentials:');
  console.log('Email: maria.ivanova@realestate.bg');
  console.log('Password: password123');
  console.log('\nEmail: petar.stoynov@realestate.bg');
  console.log('Password: password123');
}

main()
  .catch((e) => {
    console.error('‚ùå Error seeding database:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });