name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # 🔍 Code Quality Checks
  code-quality:
    name: 🔍 Code Quality & Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm install
      
    - name: 🔍 Run ESLint
      run: npm run lint
      continue-on-error: true # Временно, докато оправим всички lint грешки
      
    - name: 🎨 Check Prettier formatting
      run: npm run format:check
      continue-on-error: true # Временно

  # 🏗️ Build Application  
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm install
      
    - name: 🏗️ Build frontend
      working-directory: ./frontend
      run: npm run build
      env:
        NODE_ENV: production
        
    - name: 📦 Build backend
      working-directory: ./backend
      run: npm run build:server
     
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 7

  # 🚀 Deploy to Production (only from main)
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: production
      url: https://real-estate-frontend-9sh8.onrender.com
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
        
    - name: 🚀 Trigger Render Deploy
      run: |
        curl -X POST "https://api.render.com/deploy/srv-${{ secrets.RENDER_PRODUCTION_SERVICE_ID }}" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Accept: application/json"
        
    - name: ✅ Deployment Success
      run: echo "🎉 Deployment to production completed successfully!"